services:
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - mynet

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - mynet
 
  kafka:
    # image: apache/kafka:3.7.0
    image: confluentinc/cp-kafka:latest

    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    # volumes:
    #   - kafka:/var/lib/kafka/data
    networks:
      - mynet

  apigateway:
    build:
      context: .
      dockerfile: ./apps/apigateway/Dockerfile
      target: development

    command: npm run start:prod-apigateway
    ports:
      - "3000:3000"
    networks:
      - mynet
    volumes:
      - .:/usr/src/app
    depends_on:
      - mongo
      - kafka
      - zookeeper

  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development

    command: npm run start:prod-orders
    networks:
      - mynet
    volumes:
      - .:/usr/src/app
    depends_on:
      - mongo
      - kafka
      - zookeeper

# kafka-ui:
#     container_name: kafka-ui
#     image: provectuslabs/kafka-ui:latest
#     ports:
#       - 8080:8080
#     environment:
#       DYNAMIC_CONFIG_ENABLED: true
#     volumes:
#       - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml

volumes:
  kafka:
    driver: local  

networks:
  mynet:
    driver: bridge